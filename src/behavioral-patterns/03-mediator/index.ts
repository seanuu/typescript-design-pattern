/**
 * 中介者（Mediator）
 * 定义：用一个中介对象来封装一系列的对象交互，中介者使各对象不需要显式地相互引用，
 *      从而使其耦合松散，而且可以独立地改变它们之间的交互。(中介对象调用需要沟通的对象的方法)
 * 结构：
 *     -- Mediator（抽象中介者）：它定义一个接口，该接口用于与各同事对象之间进行通信。
 *     -- ConcreteMediator（具体中介者）：它是抽象中介者的子类，通过协调各个同事对象来实现协作行为，它维持了对各个同事对象的引用。
 *     -- Colleague（抽象同事类）：它定义各个同事类公有的方法，并声明了一些抽象方法来供子类实现，
 *        同时它维持了一个对抽象中介者类的引用，其子类可以通过该引用来与中介者通信。
 *     -- ConcreteColleague（具体同事类）：它是抽象同事类的子类；每一个同事对象在需要和其
 *        他同事对象通信时，先与中介者通信，通过中介者来间接完成与其他同事类的通信；在具体同事类中实现了在抽象同事类中声明的抽象方法。
 * 适用场景：
 *     -- 一组对象以定义良好但是复杂的方式进行通信，产生的相互依赖关系结构混乱且难以理解；
 *     -- 一个对象引用其他很多对象并且直接与这些对象通信，导致难以复用该对象；
 *     -- 想通过一个中间类来封装多个类中的行为，而又不想生成太多的子类；
 * 优点：
 *     -- 简化了对象之间的关系，将系统的各个对象之间的相互关系进行封装，将各个同事类解耦，使系统成为松耦合系统；
 *     -- 使控制集中化。将交互的复杂性变为中介者的复杂性；
 * 缺点：
 *     -- 由于中介者对象封装了系统中对象之间的相互关系，导致其变得非常复杂，可能难以维护。
 */
